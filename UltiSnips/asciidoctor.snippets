# AsciiDoc snippets for the UltiSnips plug-in
# Copyright (C) 2021 Dandi Wong

# Home Page:   https://github.com/DandiWong/vim-snippets
# Last Change: 2021-12-16 17:02

#
# References:
#
#   [1] https://github.com/jhradilek/vim-snippets

priority -50

global !p
whitespace = re.compile('[\s_-]*\{nbsp\}[\s_-]*|[\s_-]+')
macros     = re.compile('\\bbtn:\[|\\bkbd:\[|\\bmenu:\\b|\[[^\]]*\][\*_`#]|\{[^\}]*\}[\s_]*')
disallowed = re.compile('[^\w\d.-]')

def compose_id(string):
	'''Converts an AsciiDoc string to a valid block ID.'''
	temp = whitespace.sub('-', string)
	temp = macros.sub('', temp)
	temp = disallowed.sub('', temp)

	return temp.lower()
endglobal

# -------------------------------------------------------------------------
#                           Docs header
# -------------------------------------------------------------------------

snippet version "Document header version string"
v1.0, `!v strftime('%Y-%m-%d', localtime())`:${1: Revision remark}
endsnippet

snippet author "Document header author string"
`!v g:username` <`!v g:email`>
endsnippet

# snippet header "Document  Blockheader"
# ${1:`!v expand('%:t:r')`}
# `!p snip.rv="=" * len(t[1])`
# `!v g:username` <`!v g:email`>
# v1.0, `!v strftime('%Y-%m-%d', localtime())`:${2: Revision remark}
# endsnippet

snippet header "Document Blockheader"
:encoding: utf-8
:scripts: cjk
:icons: font
:stem: latexmath
:source-highlighter: pygments
:pygments-css: class
:pygments-style: material
:pygments-linenums-mode: inline
:sourcedir: src
:includedir: includes
:imagesdir: images
:title-logo-image: {imagesdir}/logo.png
:toc: left
:toc-title: 目录
:toclevels: 3
:sectnums:
:sectnumlevels: 3
:sectanchors:
:figure-caption: 图
:table-caption: 表格
:chapter-signifier: 章节
:pdf-theme: custom
:doctype: ${1:article}
:author: `!v g:username`
:email: `!v g:email`
:organization: ${2:`!v g:organization`}
:revdate: `!v g:current_time`
:revnumber: 0.1
:revremark: Alpha
= ${VISUAL}${3:`!v expand('%:r')`}

$0
endsnippet

# -------------------------------------------------------------------------
#                           Titles and Sections
# -------------------------------------------------------------------------

# Level 0 section:
snippet = "Document Title (Level 0)" !b
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 0 section - alternative version:
snippet =0 "Document Title (Level 0)" !b
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 0 section - alternative version:
snippet =1 "Document Part (Level 0)" !b
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 0 section with a custom ID:
snippet =[ "Document Title (Level 0) with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 0 section with a custom ID - alternative version:
snippet =0[ "Document Title (Level 0) with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 0 section with a custom ID - alternative version:
snippet =1[ "Document Part (Level 0) with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
= ${VISUAL}${1:Document title}

$0
endsnippet

# Level 1 section:
snippet == "Level 1 Section Title" !b
== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 1 section - alternative version:
snippet =2 "Level 1 Section Title" !b
== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 1 section with a custom ID:
snippet ==[ "Level 1 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 1 section with a custom ID - alternative version:
snippet =2[ "Level 1 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 2 section:
snippet === "Level 2 Section Title" !b
=== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 2 section - alternative version:
snippet =3 "Level 2 Section Title" !b
=== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 2 section with a custom ID:
snippet ===[ "Level 2 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
=== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 2 section with a custom ID - alternative version:
snippet =3[ "Level 2 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
=== ${VISUAL}${1:Section title}

$0
endsnippet


# Level 3 section:
snippet ==== "Level 3 Section Title" !b
==== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 3 section - alternative version:
snippet =4 "Level 3 Section Title" !b
==== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 3 section with a custom ID:
snippet ====[ "Level 3 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
==== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 3 section with a custom ID - alternative version:
snippet =4[ "Level 3 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
==== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 4 section:
snippet ===== "Level 4 Section Title" !b
===== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 4 section - alternative version:
snippet =5 "Level 4 Section Title" !b
===== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 4 section with a custom ID:
snippet =====[ "Level 4 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
===== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 4 section with a custom ID - alternative version:
snippet =5[ "Level 4 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
===== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 5 section:
snippet ====== "Level 5 Section Title" !b
====== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 5 section - alternative version:
snippet =6 "Level 5 Section Title" !b
====== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 5 section with a custom ID:
snippet ======[ "Level 5 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
====== ${VISUAL}${1:Section title}

$0
endsnippet

# Level 5 section with a custom ID - alternative version:
snippet =6[ "Level 5 Section Title with Custom ID" !b
[id="${2:`!p snip.rv = compose_id(t[1])`}${3:-\{context\}}"]
====== ${VISUAL}${1:Section title}

$0
endsnippet


# -------------------------------------------------------------------------
#                             Block Elements
# -------------------------------------------------------------------------

# Quote block:
snippet ____ "Quote Block" !b
[quote,${1:author},${2:source}]
____
${VISUAL}$1
____
$0
endsnippet

snippet quote "Quote Block" !b
[quote,${1:author},${2:source}]
____
${VISUAL}$3
____
$0
endsnippet

snippet verse "Verse Block" b
[verse,${1:author},${2:source}]
____
${VISUAL}$3
____
$0
endsnippet

snippet example "Example Block" b
====
$0
====
endsnippet

# Comment block:
snippet //// "Comment Block" !b
////
${VISUAL}$1
////
$0
endsnippet

# Listing block:
snippet ---- "Listing Block" !b
----
${VISUAL}$1
----
$0
endsnippet

# Open block:
snippet -- "Open Block" !b
--
${VISUAL}$1
--
$0
endsnippet

# Passthrough block:
snippet ++++ "Passthrough Block" !b
++++
${VISUAL}$1
++++
$0
endsnippet

snippet passthrough "Passthrough Block" !b
++++
${VISUAL}$1
++++
$0
endsnippet

snippet sidebar "Sidebar Block" !b
****
${VISUAL}$1
$0
****
endsnippet

# Sidebar block:
snippet **** "Sidebar Block" !b
****
${VISUAL}$1
****
$0
endsnippet

snippet footnote "Footnote"
footnote:[${1:text}]
endsnippet

# Literal block with quotes substitutions:
snippet literal "Literal Block with Quotes Substitutions" !b
[literal,subs="${1:+quotes}"]
....
${VISUAL}$2
....
$0
endsnippet

# Literal block:
snippet .... "Literal Block" !b
[literal,subs="${1:+quotes}"]
....
${VISUAL}$2
....
$0
endsnippet

# Source code block:
snippet code "Source Code Block" !b
[source%linenums,${1:python}]
.${2:Title}
----
${VISUAL}$0 // <1>
----
<1> quote
endsnippet

# Source code block:
snippet codem "Source Code Block in markdown style" !b
\`\`\`${1:python}
${VISUAL}$0
\`\`\`
endsnippet

# Source code block:
snippet c` "Source Code Block in markdown style" !b
\`\`\`${1:python}
${VISUAL}$0
\`\`\`
endsnippet

# Admonition - caution:
snippet caution "Admonition: Caution" !b
[CAUTION]
.${1:Title}
====
${VISUAL}$2
====
$0
endsnippet

# Admonition - important:
snippet important "Admonition: Important" !b
[IMPORTANT]
.${1:Title}
====
${VISUAL}$2
====
$0
endsnippet

# Admonition - note:
snippet note "Admonition: Note" !b
[NOTE]
.${1:Title}
====
${VISUAL}$2
====
$0
endsnippet

# Admonition - tip:
snippet tip "Admonition: Tip" !b
[TIP]
.${1:Title}
====
${VISUAL}$2
====
$0
endsnippet

# Admonition - warning:
snippet warning "Admonition: Warning" !b
[WARNING]
.${1:Title}
====
${VISUAL}$2
====
$0
endsnippet


# -------------------------------------------------------------------------
#                          User Interface Macros
# -------------------------------------------------------------------------

# Button:
snippet btn "Button" !w
btn:[${1:${VISUAL}}]$0
endsnippet

# Keyboard shortcut:
snippet kbd "Keyboard Shortcut" !w
kbd:[${1:key}]$0
endsnippet

# Menu selection:
snippet menu "Menu Selection" !w
menu:${1:${VISUAL}}[$2]$0
endsnippet


# -------------------------------------------------------------------------
#                            Links and Images
# -------------------------------------------------------------------------

# Link:
snippet link "Link" !w
link:$1[${2:${VISUAL}}]$0
endsnippet

# include files
snippet include "Description" b

endsnippet
\ainclude,include::file[],
\auri,:asciidoctor-source: https://,

# Email:
snippet mailto "Email" !w
mailto:$1[${2:${VISUAL}}]$0
endsnippet

# inline image:
snippet imagei "Inline Image"
image:${1:target}[${2:alt="$3"}]
endsnippet

# Block image:
snippet imageb "Block Image" !b
image::$1[${2:${VISUAL}}]$0
endsnippet

# Video:
snippet video "Video" !b
video::$1[${2:${VISUAL}}]$0
endsnippet

snippet anchor "Hypertext link target"
anchor:${1:id}[${2:label}]
endsnippet

snippet xref "Link to hypertext anchor"
xref:${1:id}[${2:caption}]
endsnippet

# -------------------------------------------------------------------------
#                               Directives
# -------------------------------------------------------------------------

# Include directive:
snippet include "Include Directive" !b
include::${VISUAL}${0:filename}[${1:leveloffset=+1,lines=5;12..15,indent=2}]
endsnippet

snippet file "Link to file section"
xref:${1:filename}[${2:#section-id[Section Title]}]
endsnippet

# ifdef directive:
snippet ifdef "ifdef Directive" !b
ifdef::$1[]
${VISUAL}$2
endif::[]
$0
endsnippet

# ifndef directive:
snippet ifndef "ifndef Directive" !b
ifndef::$1[]
${VISUAL}$2
endif::[]
$0
endsnippet

# ifeval directive:
snippet ifeval "ifeval Directive" !b
ifeval::[$1]
${VISUAL}$2
endif::[]
$0
endsnippet


# -------------------------------------------------------------------------
#                             Text Formatting
# -------------------------------------------------------------------------

# Bold text:
snippet * "Bold Text" !w
*${1:${VISUAL}}*$0
endsnippet

# Bold text - unconstrained:
snippet ** "Bold Text (Unconstrained)" !i
**${1:${VISUAL}}**$0
endsnippet

# Italic text:
snippet _ "Italic Text" !w
_${1:${VISUAL}}_$0
endsnippet

# Italic text - unconstrained:
snippet __ "Italic Text (Unconstrained)" !i
__${1:${VISUAL}}__$0
endsnippet

# Monospace text:
snippet ` "Monospace Text" !w
\`${1:${VISUAL}}\`$0
endsnippet

# Monospace text - unconstrained:
snippet `` "Monospace Text (Unconstrained)" !i
\`\`${1:${VISUAL}}\`\`$0
endsnippet

# Superscript text:
snippet ^ "Superscript Text" !i
^${1:${VISUAL}}^$0
endsnippet

# Subscript text:
snippet ~ "Superscript Text" !i
~${1:${VISUAL}}~$0
endsnippet

# Single curved quotes:
snippet '` "Single Curved Quotes" !w
'\`${1:${VISUAL}}\`'$0
endsnippet

# Double curved quotes:
snippet "` "Double Curved Quotes" !w
"\`${1:${VISUAL}}\`"$0
endsnippet

snippet bug "highlight for bug" b
 [red]#bug# $0
endsnippet

snippet optimize "highlight for optimize" b
 [yellow]#optimize# $0
endsnippet

snippet feature "highlight for feature" b
 [green]#feature# $0
endsnippet

snippet info "highlight for info" b
 [blue]#info# $0
endsnippet

snippet br "hardbreaks" b

[%hardbreaks]

$0
endsnippet

snippet underline "underline text" b
 [.underline]#${1:text}# $0
endsnippet

snippet line-through "line-through" b
 [.line-through]#${1:text}# $0
endsnippet

snippet big "big text" b
 [.big]##${1:text}## $0
endsnippet

snippet small "small text" b
 [.small]#${1:text}# $0
endsnippet

snippet upper "upper letter" b
 ^${1:text}^ $0
endsnippet

snippet lower "lower letter" b
 ~${1:text}~ $0
endsnippet

# -------------------------------------------------------------------------
#                             Semantic Markup
# -------------------------------------------------------------------------

# Application name:
snippet application "Application Name" !w
[application]\`${VISUAL}$1\`$0
endsnippet

# Application name - alternative version:
snippet app "Application Name" !w
[application]\`${VISUAL}$1\`$0
endsnippet

# Cited work title:
snippet citetitle "Cited Work Title" !w
[citetitle]\`${VISUAL}$1\`$0
endsnippet

# Cited work title - alternative version:
snippet cite "Cited Work Title" !w
[citetitle]\`${VISUAL}$1\`$0
endsnippet

# Command:
snippet command "Command" !w
[command]\`${VISUAL}$1\`$0
endsnippet

# Command - alternative version:
snippet cmd "Command" !w
[command]\`${VISUAL}$1\`$0
endsnippet

# File name:
snippet filename "File Name" !w
[filename]\`${VISUAL}$1\`$0
endsnippet

# File name - alternative version:
snippet file "File Name" !w
[filename]\`${VISUAL}$1\`$0
endsnippet

# Directory name - for convenience:
snippet directory "Directory Name" !w
[filename]\`${VISUAL}$1\`$0
endsnippet

# Directory name - alternative version:
snippet dir "Directory Name" !w
[filename]\`${VISUAL}$1\`$0
endsnippet

# Function name:
snippet function "Function Name" !w
[function]\`${VISUAL}$1\`$0
endsnippet

# Function name - alternative version:
snippet func "Function Name" !w
[function]\`${VISUAL}$1\`$0
endsnippet

# GUI element name:
snippet gui "GUI Element Name" !w
[gui]\`${VISUAL}$1\`$0
endsnippet

# Option name:
snippet option "Option Name" !w
[option]\`${VISUAL}$1\`$0
endsnippet

# Option name - alternative version:
snippet opt "Option Name" !w
[option]\`${VISUAL}$1\`$0
endsnippet

# Package name:
snippet package "Package Name" !w
[package]\`${VISUAL}$1\`$0
endsnippet

# Package name - alternative version:
snippet pkg "Package Name" !w
[package]\`${VISUAL}$1\`$0
endsnippet

# Parameter name:
snippet parameter "Parameter Name" !w
[parameter]\`${VISUAL}$1\`$0
endsnippet

# Parameter name - alternative version:
snippet param "Parameter Name" !w
[parameter]\`${VISUAL}$1\`$0
endsnippet

# System item:
snippet systemitem "System Item" !w
[systemitem]\`${VISUAL}$1\`$0
endsnippet

# System item - alternative version:
snippet sys "System Item" !w
[systemitem]\`${VISUAL}$1\`$0
endsnippet

# -------------------------------------------------------------------------
#                             Table
# -------------------------------------------------------------------------

snippet csv "CSV Table" b
.${1:Title}
[frame=none,grid=rows,width="80%",role=center,cols="${2:columns}*^.^",options="header,autowidth,unbreakable"]
,===
$0
,===
endsnippet

snippet tableAutoCenter "Full Table with content auto center" b
.${1:Title}
[frame=all,grid=all,width=100%,role=center,cols="${2:columns}*^.^",options="header,autowidth,unbreakable"]
|===
| ${3:C1} | ${4:C2} | ${5:C3}
.2+.^| $0
|===
endsnippet

snippet tableCustom "Full Table with custom content arrangement" b
.${1:Title}
[frame=all,grid=all,width=100%,role=center,cols="$2",options=header]
|===
^.^| ${3:C1} ^.^| ${4:C2} ^.^| ${5:C3}
.2+.^| $0
|===
endsnippet

# -------------------------------------------------------------------------
#                      References & LICENSE & bibtex & bibliography
# -------------------------------------------------------------------------

# System item - alternative version:
snippet license "LICENSE" !b
<<<
== LICENSE
$0
${VISUAL}${1:License name}
endsnippet


# -------------------------------------------------------------------------
#                      Description List
# -------------------------------------------------------------------------

snippet horiz,list "Horizontal Description list" b
[horizontal]
${1:Item}::${2:description}
$0
endsnippet

# add checklist block 
snippet checklist "Todo Check list" b
* [ ] ${1:Item}
$0
endsnippet

# -------------------------------------------------------------------------
#                      UML,Mermaid .etc
# -------------------------------------------------------------------------

snippet uml_UseCase,usecase,uc "PlantUML UseCase" b
.${1:用例图}
[plantuml]
....
actor "${2:产品经理}" as a1
actor "${3:研发工程师}"as a2
package "${4:需求评审}" as p1 {
  usecase "${5:画原型}" as uc1
  usecase "${6:写文档}" as uc2
}

a1 -right-> uc1
a1 -right-> uc2
uc2 -down-> uc1 : include
uc1 -right-> a2
uc2 -right-> a2
....

$0
endsnippet

snippet uml_SequenceDiagram,sequence,seq "PlantUML Sequence Diagram" b
.${1:时序图}
[plantuml]
....
autonumber
skinparam responseMessageBelowArrow true

participant ${2:组件} as p1
actor ${3:身份} as a1
boundary ${4:边界} as b1
control ${5:控制器} as c1
entity ${6:实体} as e1
database ${7:数据库} as d1
collections ${8:集合} as cc1
queue ${9:队列} as q1

p1 -> a1 : ${10:描述} 
a1 -> b1 : $success(""success: hello B."")
b1 -x c1 : $failure(""failure"")
c1 ->> e1: $warning(""warning"")
....

$0
endsnippet

snippet uml_GanttDiagram,gantt "PlantUML Gantt Diagram" b
.${1:项目规划}
[plantuml,width=100%]
....
saturday are closed
sunday are closed
${2:2022-01-29} to ${3:2022-01-30} is open 
${4:2022-01-31} to ${5:2022-02-06} are closed

Project starts ${6:2022-01-01}
[${7:业务需求讨论}] as [t1] starts ${8:2022-01-01} and ends ${9:2022-01-05} and is ${10:100}% complete
${11:[需求确认] as [t2] starts 2022-01-02 and ends 2022-01-06 and is 80% complete
[需求冻结] happens at [t2]'s end
[设计] as [t3] starts 2022-01-05 and ends 2022-01-10 and is 20% complete
[开发] as [t4] starts at [t2]'s end and ends 2022-01-20 and is 5% complete
then [测试与修复缺陷] as [t5] lasts 12 days
then [部署与发布] as [t6] lasts 1 day
then [迭代一结束] happens}
....

$0
endsnippet

snippet uml_StatesDiagram,states "PlantUML States Diagram" b
.${1:活动状态}
[plantuml]
....
hide empty description

state "${2:未上线}" as s0
state "${3:参与期}" as s1 {
  state "${4:开奖期}" as s1.1
  state "${5:公示期}" as s1.2
}

[*] -right-> s0
s0 : ${6:不可见}

s0 -right-> s1.1 : ${7:2022/01/10}
${8:s1.1 : 可见
s1.1 : 审核通过后即可参与
s1.1 : 可抽奖

s1.1 -right-> s1.2 : 待定
s1.2 : 不可抽奖}

${9:s1.2} --> [*]
....

$0
endsnippet

# -------------------------------------------------------------------------
#                      PRD Template
# -------------------------------------------------------------------------

snippet prd_FullTemplate "full PRD Template" b
:encoding: utf-8
:scripts: cjk
:icons: font
:stem: latexmath
:source-highlighter: pygments
:pygments-css: class
:pygments-style: material
:pygments-linenums-mode: inline
:sourcedir: src
:includedir: includes
:imagesdir: images
:title-logo-image: {imagesdir}/logo.png
:toc: left
:toc-title: 目录
:toclevels: 3
:sectnums:
:sectnumlevels: 3
:sectanchors:
:figure-caption: 图
:table-caption: 表格
:chapter-signifier: 章节
:pdf-theme: custom
:doctype: ${1:article}
:author: `!v g:username`
:email: `!v g:email`
:organization: ${2:`!v g:organization`}
:revdate: `!v g:current_time`
:revnumber: 0.1
:revremark: Alpha
= ${3:`!v expand('%:r')`}

== 项目信息

=== 业务背景

=== 业务目标

=== 参与人员
[horizontal]
项目经理:: ${4:A}
业务经理:: ${5:B}
产品经理:: ${6:C}
设计师:: ${7:D}
研发工程师:: ${8:E}
测试工程师:: ${9:F}

=== 项目规划
.项目规划
[plantuml,width=100%]
....
saturday are closed
sunday are closed
${10:2022-01-29} to ${11:2022-01-30} is open 
${12:2022-01-31} to ${13:2022-02-06} are closed

Project starts ${14:2022-01-01}
[${15:业务需求讨论}] as [t1] starts ${14:2022-01-01} and ends ${16:2022-01-05} and is ${17:100}% complete
${18:[需求确认] as [t2] starts 2022-01-02 and ends 2022-01-06 and is 80% complete
[需求冻结] happens at [t2]'s end
[设计] as [t3] starts 2022-01-05 and ends 2022-01-10 and is 20% complete
[开发] as [t4] starts at [t2]'s end and ends 2022-01-20 and is 5% complete
then [测试与修复缺陷] as [t5] lasts 12 days
then [部署与发布] as [t6] lasts 1 day
[迭代一结束] happens at [t6]'s end}
....

== 业务建模

=== 领域模型

=== 业务用例

=== 业务流程

== S1-F1 ${19:系统1-功能1}

=== P1 ${20:页面1}
image::$21[]

.信息结构
[frame=all,grid=all,width=100%,role=center,cols="2,3,3,5",options=header]
|===
^.^| 版块 ^.^| 控件 ^.^| 元素 ^.^| 属性 
| B1 | ${22:NavigationBar} | \`${23:\$\{title_p1\}}\` | \`${24:页面标题}\`
|===

.交互
[frame=all,grid=all,width=100%,role=center,cols="3,3,5",options=header]
|===
^.^| 元素 ^.^| 行为 ^.^| 预期结果 
| \`${25:\$\{btn_p1_submit\}}\` | ${26:click} | ${27:提交成功或失败}
|===

== 附录

=== 附录一：图片资源

=== 附录二：文本内容

== 运营部署

=== 运营计划

== 质量管理

=== 资源依赖

.依赖清单
[frame=all,grid=all,width=100%,role=center,cols="2,5,5,3,2",options=header]
|===
^.^| 编号 ^.^| 资源描述 ^.^| 支持功能 ^.^| 交付节点 ^.^| 管控人 
| $28 | $29 | $30 | $31 | $32
|===

=== 风险管控
.风险清单
[frame=all,grid=all,width=100%,role=center,cols="2,6,3,5,3,3",options=header]
|===
^.^| 编号 ^.^| 风险描述 ^.^| 影响程度 ^.^| 后备方案 ^.^| 跟进情况 ^.^| 管控人 
| ${33:S1-R1} | ${34:标题有可能无法自定义} | ${35:低} | ${36:用系统标题} | ${37:跟进中} | ${38:Dandi} 
|===

=== 性能指标
.性能指标
[frame=all,grid=all,width=100%,role=center,cols="2,3,5,2",options=header]
|===
^.^| 系统 ^.^| 评估点 ^.^| 指标要求 ^.^| 负责人
| $39 | $40 | $41 | $42
|===

=== 版本变更
==== ${43:20220112会议}
.变更内容
[frame=all,grid=all,width=100%,role=center,cols="1,1,3,1",options=header]
|===
^.^| 编号 ^.^| 类型 ^.^| 事项 ^.^| 状态
.^| ${44:C1} .^| ${45:文案变更} | ${46:\`登陆\` -> \`登录\`} | ${47:已完成}
|===

[glossary]
== 术语定义
UML:: 统一建模语言（UML），目前版本为 2.5，本文档中的用例图、活动图、状态图、类图等，均以 UML 进行描述，符合国标 \`GB/T 28174-2011\`。
等宽字体:: 文档中对具体文案、参数的描述所用的字体，如 \`${user_id}\`、\`登录失败，请稍后再试\`。

endsnippet

snippet prd_PageStructure,page,requirement,feature "requirement form by page for PRD" b
=== ${1:P1: 页面1}
image::${VISUAL}[]

.信息结构
[frame=all,grid=all,width=100%,role=center,cols="1,2,2,5",options=header]
|===
^.^| 版块 ^.^| 控件 ^.^| 元素 ^.^| 属性 
| ${2:B1} | ${3:NavigationBar} | ${4:title_p1} | ${5:页面标题}
|===

.交互
[frame=all,grid=all,width=100%,role=center,cols="3,2,5",options=header]
|===
^.^| 元素 ^.^| 行为 ^.^| 预期结果 
| ${6:title_p1} | ${7:double_click} | ${8:back to top} 
|===

$0
endsnippet

snippet prd_ResourceList,resource "Resource List" b
.依赖清单
[frame=all,grid=all,width=100%,role=center,cols="1,3,3,2,1",options=header]
|===
^.^| 编号 ^.^| 资源描述 ^.^| 支持功能 ^.^| 交付节点 ^.^| 管控人 
| $1 | $2 | $3 | $4 | $5
|===

$0
endsnippet

snippet prd_RiskManagement,risk "Risk Management List" b
=== 风险管控
.风险清单
[frame=all,grid=all,width=100%,role=center,cols="1,5,1,5,1,1",options=header]
|===
^.^| 编号 ^.^| 风险描述 ^.^| 影响程度 ^.^| 后备方案 ^.^| 跟进情况 ^.^| 管控人 
| $1 | $2 | $3 | $4 | $5 | $6
|===

$0
endsnippet

snippet prd_ChangeManagement,change "Change List" b
==== `!v strftime('%Y-%m-%d', localtime())`
.变更内容
[frame=all,grid=all,width=100%,role=center,cols="1,1,3,1",options=header]
|===
^.^| 编号 ^.^| 类型 ^.^| 事项 ^.^| 状态
| $1 | $2 | $3 | $4
|===

$0
endsnippet

